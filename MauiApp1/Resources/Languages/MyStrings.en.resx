<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPass" xml:space="preserve">
    <value>Enter the password</value>
  </data>
  <data name="Birthday" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="ConfirmPass" xml:space="preserve">
    <value>Confirm your password</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Are you sure you want to delete your account? This action is irreversible!</value>
  </data>
  <data name="ConfirmLogout" xml:space="preserve">
    <value>Are you sure you want to sign out?</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteLabel" xml:space="preserve">
    <value>Delete Account</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ForgetPass" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello!</value>
  </data>
  <data name="HelloWorld" xml:space="preserve">
    <value>Change the language</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogoutButton" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="LogoutLabel" xml:space="preserve">
    <value>Sign out of account</value>
  </data>
  <data name="LogoutPageTitle" xml:space="preserve">
    <value>Logout Page</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoAccount" xml:space="preserve">
    <value>You don't have an account?</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Quote1" xml:space="preserve">
    <value> Inventory control is the key to mindful consumption.</value>
  </data>
  <data name="Quote2" xml:space="preserve">
    <value> The best time to start is now!</value>
  </data>
  <data name="Quote3" xml:space="preserve">
    <value>Small steps lead to big changes.</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Registrate!" xml:space="preserve">
    <value>Sign up!</value>
  </data>
  <data name="Alex" xml:space="preserve">
    <value>Alex</value>
  </data>
  <data name="FirstPart" xml:space="preserve">
    <value>By continuing, you agree to the</value>
  </data>
  <data name="SecondPart" xml:space="preserve">
    <value>Terms of Use Policy</value>
  </data>
  <data name="ThirdPart" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="FourthPart" xml:space="preserve">
    <value>privacy</value>
  </data>
  <data name="HaveAcc" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="Login!" xml:space="preserve">
    <value>Sign in!</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="Editing" xml:space="preserve">
    <value>Editing a profile</value>
  </data>
  <data name="NewPass" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Groceries</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="Medication" xml:space="preserve">
    <value>Medications</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddNewCategory" xml:space="preserve">
    <value>Add new category</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="NameOfCategory" xml:space="preserve">
    <value>Category name</value>
  </data>
  <data name="DeleteLabelCategory" xml:space="preserve">
    <value>Delete the category?</value>
  </data>
  <data name="ConfirmDeleteCategory" xml:space="preserve">
    <value>Are you sure you want to delete this category?</value>
  </data>
  <data name="SettingCategoryFields" xml:space="preserve">
    <value>Customize your category fields</value>
  </data>
  <data name="Field" xml:space="preserve">
    <value>Field</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="ItemCategories" xml:space="preserve">
    <value>CATEGORIES OF GOODS:</value>
  </data>
  <data name="Groceries" xml:space="preserve">
    <value>GROCERIES</value>
  </data>
  <data name="Medications" xml:space="preserve">
    <value>MEDICATIONS</value>
  </data>
  <data name="Statistic" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>item(s)</value>
  </data>
  <data name="RecentOperations" xml:space="preserve">
    <value>Recent operations</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="NoOperations" xml:space="preserve">
    <value>No operations yet</value>
  </data>
  <data name="Changes" xml:space="preserve">
    <value>Changes:</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>No data.</value>
  </data>
  <data name="AddItem" xml:space="preserve">
    <value>Add new item</value>
  </data>
  <data name="EnterValue" xml:space="preserve">
    <value>Enter a value</value>
  </data>
  <data name="EditItem" xml:space="preserve">
    <value>Edit the item</value>
  </data>
  <data name="ChangeFields" xml:space="preserve">
    <value>Change fields</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="NewCategory" xml:space="preserve">
    <value>New category</value>
  </data>
  <data name="EnterNewPass" xml:space="preserve">
    <value>Enter a new password</value>
  </data>
  <data name="ExpiredMedicine" xml:space="preserve">
    <value>Expired medications</value>
  </data>
  <data name="NoExpiredMedicine" xml:space="preserve">
    <value>There are no tainted medications yet</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity:</value>
  </data>
  <data name="ExpiredProducts" xml:space="preserve">
    <value>Expired products</value>
  </data>
  <data name="NoExpiredProducts" xml:space="preserve">
    <value>No spoiled products yet</value>
  </data>
  <data name="NoProducts" xml:space="preserve">
    <value>No groceries.</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created:</value>
  </data>
  <data name="ExpiresOn" xml:space="preserve">
    <value>Expires on</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add new product</value>
  </data>
  <data name="WeightAndVolume" xml:space="preserve">
    <value>Weight/Volume:</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title:</value>
  </data>
  <data name="FirmAndManufacturer" xml:space="preserve">
    <value>Firm/Manufacturer:</value>
  </data>
  <data name="ExpirationDate" xml:space="preserve">
    <value>Expiration Date:</value>
  </data>
  <data name="EditProduct" xml:space="preserve">
    <value>Edit the product</value>
  </data>
  <data name="g" xml:space="preserve">
    <value>g</value>
  </data>
  <data name="kg" xml:space="preserve">
    <value>kg</value>
  </data>
  <data name="l" xml:space="preserve">
    <value>l</value>
  </data>
  <data name="ml" xml:space="preserve">
    <value>ml</value>
  </data>
  <data name="pcs" xml:space="preserve">
    <value>pcs</value>
  </data>
  <data name="NoMedications" xml:space="preserve">
    <value>No medications.</value>
  </data>
  <data name="Dosage" xml:space="preserve">
    <value>Dosage:</value>
  </data>
  <data name="VolumeAndQuantity" xml:space="preserve">
    <value>Volume/Quantity:</value>
  </data>
  <data name="ManufacturerAndDescription" xml:space="preserve">
    <value>Manufacturer/Description:</value>
  </data>
  <data name="AddMedicine" xml:space="preserve">
    <value>add new medicine</value>
  </data>
  <data name="EditMedicine" xml:space="preserve">
    <value>Edit the medicine</value>
  </data>
  <data name="HistoryOperation" xml:space="preserve">
    <value>History of operations</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="QuantityHistory" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="ClearHistory" xml:space="preserve">
    <value>Clear history</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
</root>